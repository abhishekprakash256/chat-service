Two services one for the registration and other for the chat 

The access to pgsql and redis are handled by flask and go as per need 




services used -->

nextjs for url of the page /demo/chat/register

this should call the backend flask server to pass the user_1 , user_2 , submit 

flask server -->

The Flask access the redis to get the hash 

user1.   --> user1. in the flask , POST , this should access the GO server for regisgtration to access PGSQL

user2    --> user2 , in the flask , POST , this should access the GO server for regisgtration to access PGSQL

chat-server/register ---> register , in the flask , 


give the user out


nextjs page for login --> 

/demo/chat/user/<hash>   GET request

in the fask 

user       ---> 

login   --->    /chat/user/username/login.   ---> login the user , POST , Go server validates the data and let the user in 


message  ---> 

inp --> message    ---> message goes to the go server through the POST request , redis check if the user is online , save the message in the postgresql and deliver the message 

/chat/user/<hash>/message  --> read the message and send the message through the backend of GO 


logout --> /demo/chat/user/logout --> to nextjs server for logout , GET request

endchat --> /demo/chat/user/logout    ---> to go server and nextjs to delelte the data and nextjs refreshers the page and route to register  . GET request
